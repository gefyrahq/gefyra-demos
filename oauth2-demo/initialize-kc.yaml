apiVersion: v1
data:
  realm.json: |-
    {
      "id" : "demo",
      "realm" : "demo",
      "notBefore" : 0,
      "defaultSignatureAlgorithm" : "RS256",
      "revokeRefreshToken" : false,
      "refreshTokenMaxReuse" : 0,
      "accessTokenLifespan" : 300,
      "accessTokenLifespanForImplicitFlow" : 900,
      "ssoSessionIdleTimeout" : 1800,
      "ssoSessionMaxLifespan" : 36000,
      "ssoSessionIdleTimeoutRememberMe" : 0,
      "ssoSessionMaxLifespanRememberMe" : 0,
      "offlineSessionIdleTimeout" : 2592000,
      "offlineSessionMaxLifespanEnabled" : false,
      "offlineSessionMaxLifespan" : 5184000,
      "clientSessionIdleTimeout" : 0,
      "clientSessionMaxLifespan" : 0,
      "clientOfflineSessionIdleTimeout" : 0,
      "clientOfflineSessionMaxLifespan" : 0,
      "accessCodeLifespan" : 60,
      "accessCodeLifespanUserAction" : 300,
      "accessCodeLifespanLogin" : 1800,
      "actionTokenGeneratedByAdminLifespan" : 43200,
      "actionTokenGeneratedByUserLifespan" : 300,
      "oauth2DeviceCodeLifespan" : 600,
      "oauth2DevicePollingInterval" : 5,
      "enabled" : true,
      "sslRequired" : "external",
      "registrationAllowed" : false,
      "registrationEmailAsUsername" : false,
      "rememberMe" : false,
      "verifyEmail" : false,
      "loginWithEmailAllowed" : true,
      "duplicateEmailsAllowed" : false,
      "resetPasswordAllowed" : false,
      "editUsernameAllowed" : false,
      "bruteForceProtected" : false,
      "permanentLockout" : false,
      "maxFailureWaitSeconds" : 900,
      "minimumQuickLoginWaitSeconds" : 60,
      "waitIncrementSeconds" : 60,
      "quickLoginCheckMilliSeconds" : 1000,
      "maxDeltaTimeSeconds" : 43200,
      "failureFactor" : 30,
      "roles" : {
        "realm" : [ {
          "id" : "ef816634-ef78-4816-b689-b011ccc56b08",
          "name" : "uma_authorization",
          "description" : "${role_uma_authorization}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "demo",
          "attributes" : { }
        }, {
          "id" : "40a2b3fc-4f29-492f-8ec0-52f97a404972",
          "name" : "offline_access",
          "description" : "${role_offline-access}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "demo",
          "attributes" : { }
        }, {
          "id" : "02e83775-6946-47ef-99f4-af81f5d9e2dd",
          "name" : "default-roles-demo",
          "description" : "${role_default-roles}",
          "composite" : true,
          "composites" : {
            "realm" : [ "offline_access", "uma_authorization" ],
            "client" : {
              "account" : [ "view-profile", "manage-account" ]
            }
          },
          "clientRole" : false,
          "containerId" : "demo",
          "attributes" : { }
        } ],
        "client" : {
          "realm-management" : [ {
            "id" : "984d3cba-55fd-431b-921e-d61b61ccc60b",
            "name" : "query-clients",
            "description" : "${role_query-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "64347e85-f292-4a82-817b-38b173b37998",
            "name" : "manage-identity-providers",
            "description" : "${role_manage-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "6a7a6706-5145-466c-80b4-cb0d6f82c965",
            "name" : "query-groups",
            "description" : "${role_query-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "2a9ca45e-47fc-4de2-b942-1a9f4ac46f40",
            "name" : "view-events",
            "description" : "${role_view-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "342fe9d1-57e7-4e45-a30d-646a1497e0d7",
            "name" : "query-realms",
            "description" : "${role_query-realms}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "7af9049e-f57c-4012-bb9f-a1cec0e413aa",
            "name" : "realm-admin",
            "description" : "${role_realm-admin}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients", "manage-identity-providers", "query-groups", "view-events", "query-realms", "view-identity-providers", "query-users", "manage-clients", "manage-realm", "view-authorization", "view-clients", "impersonation", "manage-events", "manage-authorization", "manage-users", "view-users", "view-realm", "create-client" ]
              }
            },
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "67b0c545-e7a4-4c28-8e28-5c4c608d92ec",
            "name" : "view-identity-providers",
            "description" : "${role_view-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "5204b670-041e-4b7f-92a1-ed1cb4e2aae9",
            "name" : "query-users",
            "description" : "${role_query-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "92ab4bc4-a8a2-41e9-b2e5-cabe9f0e1c89",
            "name" : "manage-clients",
            "description" : "${role_manage-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "cdae7180-040d-4255-8b38-544db120311e",
            "name" : "manage-realm",
            "description" : "${role_manage-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "e4161d6c-6b7d-4021-a4fe-3bc608a39132",
            "name" : "view-authorization",
            "description" : "${role_view-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "1581fd05-7398-4b1d-a013-5c7ec795ed79",
            "name" : "view-clients",
            "description" : "${role_view-clients}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "bfc05a0f-ff74-4ca0-8de0-9eb6f8b79002",
            "name" : "impersonation",
            "description" : "${role_impersonation}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "4d5187c2-6e48-43ec-880e-c04bd49fdf57",
            "name" : "manage-events",
            "description" : "${role_manage-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "64829f82-ec77-4ebd-96b7-e8a7543d8af5",
            "name" : "manage-authorization",
            "description" : "${role_manage-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "23344646-be63-4970-b381-52dd0aad83d6",
            "name" : "manage-users",
            "description" : "${role_manage-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "5413fc72-d552-4782-9603-358f38e241eb",
            "name" : "view-users",
            "description" : "${role_view-users}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-groups", "query-users" ]
              }
            },
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "e1bc3a28-532c-424e-bc09-35648d706cb6",
            "name" : "view-realm",
            "description" : "${role_view-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          }, {
            "id" : "08d07189-4bb4-45e5-acb8-0d555f1ea546",
            "name" : "create-client",
            "description" : "${role_create-client}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
            "attributes" : { }
          } ],
          "security-admin-console" : [ ],
          "admin-cli" : [ ],
          "oauth2-demo" : [ ],
          "account-console" : [ ],
          "broker" : [ {
            "id" : "3af7ae3f-6457-4716-acff-fa2f00dfe70e",
            "name" : "read-token",
            "description" : "${role_read-token}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "31a941a4-8ae5-4512-b197-50638509c41c",
            "attributes" : { }
          } ],
          "account" : [ {
            "id" : "bbda1048-81e2-452b-8b2f-fce3a690d345",
            "name" : "view-consent",
            "description" : "${role_view-consent}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b52173da-2686-41dc-8a43-fe070b318588",
            "attributes" : { }
          }, {
            "id" : "e4f7253d-47c0-4709-bd1b-0c576425c1dc",
            "name" : "manage-consent",
            "description" : "${role_manage-consent}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "view-consent" ]
              }
            },
            "clientRole" : true,
            "containerId" : "b52173da-2686-41dc-8a43-fe070b318588",
            "attributes" : { }
          }, {
            "id" : "6ff743e2-a9fc-4e0e-a419-7b254ba475d7",
            "name" : "view-profile",
            "description" : "${role_view-profile}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b52173da-2686-41dc-8a43-fe070b318588",
            "attributes" : { }
          }, {
            "id" : "ab56ce7c-a357-4bc5-8650-4b9a9f71ff87",
            "name" : "delete-account",
            "description" : "${role_delete-account}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b52173da-2686-41dc-8a43-fe070b318588",
            "attributes" : { }
          }, {
            "id" : "8681bd40-377e-48b0-8d14-6f519a2c6cd6",
            "name" : "manage-account",
            "description" : "${role_manage-account}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "manage-account-links" ]
              }
            },
            "clientRole" : true,
            "containerId" : "b52173da-2686-41dc-8a43-fe070b318588",
            "attributes" : { }
          }, {
            "id" : "cb474f56-786f-494d-97d8-0ba290d10413",
            "name" : "manage-account-links",
            "description" : "${role_manage-account-links}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b52173da-2686-41dc-8a43-fe070b318588",
            "attributes" : { }
          }, {
            "id" : "9d6ad764-609d-4455-8a88-e9250eacedb1",
            "name" : "view-applications",
            "description" : "${role_view-applications}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b52173da-2686-41dc-8a43-fe070b318588",
            "attributes" : { }
          } ]
        }
      },
      "groups" : [ ],
      "defaultRole" : {
        "id" : "02e83775-6946-47ef-99f4-af81f5d9e2dd",
        "name" : "default-roles-demo",
        "description" : "${role_default-roles}",
        "composite" : true,
        "clientRole" : false,
        "containerId" : "demo"
      },
      "requiredCredentials" : [ "password" ],
      "otpPolicyType" : "totp",
      "otpPolicyAlgorithm" : "HmacSHA1",
      "otpPolicyInitialCounter" : 0,
      "otpPolicyDigits" : 6,
      "otpPolicyLookAheadWindow" : 1,
      "otpPolicyPeriod" : 30,
      "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
      "webAuthnPolicyRpEntityName" : "keycloak",
      "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyRpId" : "",
      "webAuthnPolicyAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyRequireResidentKey" : "not specified",
      "webAuthnPolicyUserVerificationRequirement" : "not specified",
      "webAuthnPolicyCreateTimeout" : 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyAcceptableAaguids" : [ ],
      "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
      "webAuthnPolicyPasswordlessRpId" : "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout" : 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
      "users" : [ {
        "id" : "288c5e65-e69f-46ff-92fd-23a80a9a8d29",
        "createdTimestamp" : 1649794114343,
        "username" : "john@gefyra.dev",
        "enabled" : true,
        "totp" : false,
        "emailVerified" : true,
        "firstName" : "John",
        "lastName" : "Doe",
        "email" : "john@gefyra.dev",
        "credentials" : [ {
          "id" : "f77ceb13-acc3-4c46-832f-a74f8f60e0cd",
          "type" : "password",
          "createdDate" : 1649794122679,
          "secretData" : "{\"value\":\"wINIGTLyF+bs5PhZDAUJb+63t6YbvuGZ48CqoHGomx+asMKj7N1tDWpforbIU3rihU5IXpXKCuC3Ej6bfr8TKw==\",\"salt\":\"WRCLg9De1XO0demVRFgH+Q==\",\"additionalParameters\":{}}",
          "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        } ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-demo" ],
        "notBefore" : 0,
        "groups" : [ ]
      } ],
      "scopeMappings" : [ {
        "clientScope" : "offline_access",
        "roles" : [ "offline_access" ]
      } ],
      "clientScopeMappings" : {
        "account" : [ {
          "client" : "account-console",
          "roles" : [ "manage-account" ]
        } ]
      },
      "clients" : [ {
        "id" : "b52173da-2686-41dc-8a43-fe070b318588",
        "clientId" : "account",
        "name" : "${client_account}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/demo/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/demo/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "b8e7f871-2740-4e47-92c6-df0428a2cc97",
        "clientId" : "account-console",
        "name" : "${client_account-console}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/demo/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/demo/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "124795e6-b6cb-4f70-98ea-9ef6f4b3b52b",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ],
        "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "7158f3a2-264d-4cd4-b303-8a9410758061",
        "clientId" : "admin-cli",
        "name" : "${client_admin-cli}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "31a941a4-8ae5-4512-b197-50638509c41c",
        "clientId" : "broker",
        "name" : "${client_broker}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "3ea759cc-43f1-40c3-bc3d-53d40515ec44",
        "clientId" : "oauth2-demo",
        "rootUrl" : "http://oauth2-demo.127.0.0.1.nip.io:8080/",
        "adminUrl" : "http://oauth2-demo.127.0.0.1.nip.io:8080/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "rzap7hjeepSxiXsmEXqQNaY9uwvPqOb1",
        "redirectUris" : [ "http://oauth2-demo.127.0.0.1.nip.io:8080/*" ],
        "webOrigins" : [ "http://oauth2-demo.127.0.0.1.nip.io:8080" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "saml.force.post.binding" : "false",
          "saml.multivalued.roles" : "false",
          "oauth2.device.authorization.grant.enabled" : "false",
          "backchannel.logout.revoke.offline.tokens" : "false",
          "saml.server.signature.keyinfo.ext" : "false",
          "use.refresh.tokens" : "true",
          "oidc.ciba.grant.enabled" : "false",
          "backchannel.logout.session.required" : "true",
          "client_credentials.use_refresh_token" : "false",
          "require.pushed.authorization.requests" : "false",
          "saml.client.signature" : "false",
          "id.token.as.detached.signature" : "false",
          "saml.assertion.signature" : "false",
          "saml.encrypt" : "false",
          "saml.server.signature" : "false",
          "exclude.session.state.from.auth.response" : "false",
          "saml.artifact.binding" : "false",
          "saml_force_name_id_format" : "false",
          "acr.loa.map" : "{}",
          "tls.client.certificate.bound.access.tokens" : "false",
          "saml.authnstatement" : "false",
          "display.on.consent.screen" : "false",
          "token.response.type.bearer.lower-case" : "false",
          "saml.onetimeuse.condition" : "false"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "16177b76-2dbc-46ee-9a3e-1adf825407a6",
        "clientId" : "realm-management",
        "name" : "${client_realm-management}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : { },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "f859f1e0-e65a-4c33-8e66-61375469babb",
        "clientId" : "security-admin-console",
        "name" : "${client_security-admin-console}",
        "rootUrl" : "${authAdminUrl}",
        "baseUrl" : "/admin/demo/console/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/admin/demo/console/*" ],
        "webOrigins" : [ "+" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "166e68f3-d58e-4899-bddf-92dfd15dee02",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
      } ],
      "clientScopes" : [ {
        "id" : "79905aeb-a947-4d9e-ad55-179089cc1b45",
        "name" : "email",
        "description" : "OpenID Connect built-in scope: email",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${emailScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "1155e6b1-86b4-4121-bd49-e403f7f6db3b",
          "name" : "email verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "emailVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email_verified",
            "jsonType.label" : "boolean"
          }
        }, {
          "id" : "5422642a-b3df-498a-84c1-1564b617278b",
          "name" : "email",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "email",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "92a19a26-7912-4834-b008-5d7e039710d2",
        "name" : "web-origins",
        "description" : "OpenID Connect scope for add allowed web origins to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false",
          "consent.screen.text" : ""
        },
        "protocolMappers" : [ {
          "id" : "cc0c0b6d-f3ea-47ec-8e7a-3912f88d428d",
          "name" : "allowed web origins",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-allowed-origins-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "fb942bcc-2a1d-48eb-a51d-b82aeb1d2b02",
        "name" : "profile",
        "description" : "OpenID Connect built-in scope: profile",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${profileScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "4bf27a04-5265-44cd-bb70-1fc47327c329",
          "name" : "full name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-full-name-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        }, {
          "id" : "67572fcd-e7fe-4e12-9595-aa71bd5c77dc",
          "name" : "family name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "lastName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "family_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "2135c741-f8e5-4257-aeef-54445c952ea2",
          "name" : "username",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "preferred_username",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "1ce3dbb2-52d5-43f4-9e1d-264adadac414",
          "name" : "birthdate",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "birthdate",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "birthdate",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "8b0799a8-9303-4985-b0da-4dfded5c1f00",
          "name" : "zoneinfo",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "zoneinfo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "zoneinfo",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "9b836fa4-ee61-4c14-b666-a43897a874ab",
          "name" : "website",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "website",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "website",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "de95a74c-6d89-41f7-b66c-4a1cab4fc2b2",
          "name" : "profile",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "profile",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "profile",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "d764b0fc-9ea8-40c5-a0c7-e33529fa8ef8",
          "name" : "middle name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "middleName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "middle_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "b2129d11-dae7-4400-911c-4bf5fab9c34e",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "401e27e0-498f-4b2e-bf0b-8bd225d95954",
          "name" : "nickname",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "nickname",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "nickname",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "8620a52e-28de-42ef-be78-d1ab378fccaf",
          "name" : "picture",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "picture",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "picture",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "5e058817-14f3-4a95-829b-66b61bc728d3",
          "name" : "gender",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "gender",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "gender",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "414e6f6c-d0ef-4e04-97d5-24f3ddd7902c",
          "name" : "updated at",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "updatedAt",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "updated_at",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "7bab3422-d57f-452e-b68e-9a20f72fc68d",
          "name" : "given name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "firstName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "given_name",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "1af544c8-acc5-413b-9b4c-ff3fc6852931",
        "name" : "address",
        "description" : "OpenID Connect built-in scope: address",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${addressScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "e6cc716e-30bf-4b3a-9ac8-3ddacd4da60b",
          "name" : "address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-address-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute.formatted" : "formatted",
            "user.attribute.country" : "country",
            "user.attribute.postal_code" : "postal_code",
            "userinfo.token.claim" : "true",
            "user.attribute.street" : "street",
            "id.token.claim" : "true",
            "user.attribute.region" : "region",
            "access.token.claim" : "true",
            "user.attribute.locality" : "locality"
          }
        } ]
      }, {
        "id" : "8fdc49dd-0f6c-4681-9d4e-0d98fdcf2445",
        "name" : "microprofile-jwt",
        "description" : "Microprofile - JWT built-in scope",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "a12ea178-8a0d-4eda-bfaf-d69f01f7de3d",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "multivalued" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "foo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "825a1793-b224-4041-9c01-337f959878b8",
          "name" : "upn",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "upn",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "92bfe59d-e9a3-474d-aa11-58aad3f4f8c1",
        "name" : "role_list",
        "description" : "SAML role list",
        "protocol" : "saml",
        "attributes" : {
          "consent.screen.text" : "${samlRoleListScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "8456da85-692e-4b27-9e8c-73ddff7ce8f1",
          "name" : "role list",
          "protocol" : "saml",
          "protocolMapper" : "saml-role-list-mapper",
          "consentRequired" : false,
          "config" : {
            "single" : "false",
            "attribute.nameformat" : "Basic",
            "attribute.name" : "Role"
          }
        } ]
      }, {
        "id" : "1991d4ed-c44f-4580-9687-caf824c2fa80",
        "name" : "offline_access",
        "description" : "OpenID Connect built-in scope: offline_access",
        "protocol" : "openid-connect",
        "attributes" : {
          "consent.screen.text" : "${offlineAccessScopeConsentText}",
          "display.on.consent.screen" : "true"
        }
      }, {
        "id" : "6c4685a2-16c4-4503-8e0d-e9914e9cac78",
        "name" : "roles",
        "description" : "OpenID Connect scope for add user roles to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${rolesScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "6c504c4f-1113-48cc-a4d1-96b1bb07d2b0",
          "name" : "realm roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "realm_access.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "d74c7004-05c2-402c-835b-953f6e13ee3a",
          "name" : "client roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-client-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "access.token.claim" : "true",
            "claim.name" : "resource_access.${client_id}.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "1319bd44-964f-4574-ba47-3810e6ebff07",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "5aaf876d-b56a-4186-bfc6-507e23b89ebe",
        "name" : "phone",
        "description" : "OpenID Connect built-in scope: phone",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "true",
          "consent.screen.text" : "${phoneScopeConsentText}"
        },
        "protocolMappers" : [ {
          "id" : "a08cc563-24be-45f3-add3-2449bdd487ec",
          "name" : "phone number verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumberVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number_verified",
            "jsonType.label" : "boolean"
          }
        }, {
          "id" : "a613df87-15a8-4aa1-b1ce-593b25013820",
          "name" : "phone number",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumber",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number",
            "jsonType.label" : "String"
          }
        } ]
      } ],
      "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins" ],
      "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
      "browserSecurityHeaders" : {
        "contentSecurityPolicyReportOnly" : "",
        "xContentTypeOptions" : "nosniff",
        "xRobotsTag" : "none",
        "xFrameOptions" : "SAMEORIGIN",
        "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection" : "1; mode=block",
        "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
      },
      "smtpServer" : { },
      "eventsEnabled" : false,
      "eventsListeners" : [ "jboss-logging" ],
      "enabledEventTypes" : [ ],
      "adminEventsEnabled" : false,
      "adminEventsDetailsEnabled" : false,
      "identityProviders" : [ ],
      "identityProviderMappers" : [ ],
      "components" : {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
          "id" : "701a4501-8141-4ce1-a9e6-f9e13996f0f5",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "496488db-953e-4cb5-a181-23771d1c4e55",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "saml-role-list-mapper" ]
          }
        }, {
          "id" : "22af9d9e-df93-45f7-8083-7002ba0386f0",
          "name" : "Consent Required",
          "providerId" : "consent-required",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "d9208474-6432-4bd3-8e5f-eadc671a0462",
          "name" : "Full Scope Disabled",
          "providerId" : "scope",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "bdfb17b0-799f-4a23-a730-1d510d254a18",
          "name" : "Max Clients Limit",
          "providerId" : "max-clients",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "max-clients" : [ "200" ]
          }
        }, {
          "id" : "f54dba99-03c2-4b68-a9f6-fe506849e7cd",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper" ]
          }
        }, {
          "id" : "6014a657-fc79-48cc-839b-01db3533528a",
          "name" : "Trusted Hosts",
          "providerId" : "trusted-hosts",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "host-sending-registration-request-must-match" : [ "true" ],
            "client-uris-must-match" : [ "true" ]
          }
        }, {
          "id" : "6f82a53d-8135-4b1a-86e1-e8597336d12a",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        } ],
        "org.keycloak.keys.KeyProvider" : [ {
          "id" : "82158f2a-d5d3-4f37-aeb1-09baebcb8a14",
          "name" : "rsa-generated",
          "providerId" : "rsa-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEowIBAAKCAQEAm54hUg8Wcc5z0erSB5lpIspkmCZlkzKmGI15/lkpCgLxQ7t+pJaut5f4tYye+ct+j3ViMEKW2A1jbrf5a2/RntY64c0LlacuxxrRq5PSYGcju+X4aLdSiOF1WBF4L/LqIuLOV2F3DCcDlp3n/i1OApEqhszPm1SyZmdskveyv1D00KtJARat/EZm9D98voLh2RuXe7/5O5VVL8d/vrdig67Lyy5qD0BpFVEn7N0zoIRF51psl1EuqGb7RkTmbWbD3Xgr/hmGtl4DtCHhj+cDDxySw4SSG+qbnme5JIwsttUdYiIAGG5j20qApdii28jBScMcM0Hh+qZIAJUVL8az+wIDAQABAoIBAClPJ781vBqH2Fzv/cMAqVUP7vYosywI9OhtneWz214J++uj+PFOAqE/2UiwRH9A0p7YZTE0bAB8RVndwnsPmtCUQ9su6BVY5OT7rI7kVaM7ndPCL1f02hb16oVvVb08uYR7OpUdjVGPhbdUwYHKmvu5d1WDRtUP/a+LYtn8oNmCAsZ6MA0sk9LoeNSOofdb+2dwieInC5kigjSga7aH4ozJiPht2f4JTHwmHurSHucDU1GcBAZIKDT9CI5hmZMULZFWV7DQ9jhgjIJMYKLAwwabb0w71NlzUsxm0kSQAhEZXxBk8vwG0c9DV8GdoWG1w6xkFj4T3Wt7ZuKv8B3gW2kCgYEA9btQYAji7gFpPKkTNTsdUsS7fDYuGE5XEDtyZUYRRoWSluTQETMNJX05MymJ+CDeCR485ZdkHwQ/+NqJKUgO9S2sgS6fUr1Hky6XY8S2vi/o+fTxu4L3vZsYoE3jtgRzeQ77bzlDAAkW4roIOg5XR4ZE2JbNhOIVqRO4PNTt3Y0CgYEAoh7VDY+VKhlC2dhnB4ReYaIGS4cCYT2On7r6aKOX+0kcuakn8FrGpMQ+s0B6KHwR+iQ6EMJESRZPKL9uVnBKgpJ7+Cpzo7cQZK2cse172XXZSo51KBI+Tu0ymTzOiYudfHM6w6d5tN8AaGNPddXMoWs0pkJhn7if48a5OPo8IacCgYABgOjn/YXt8OJE9b/hVoBCbmO7SdWUXn5X4hU8G2alqNGRzMqdIFPXQ+Hit0FZ3FGfeqjiur9pFSyTCDtInmFBDMt+atuctP3IH8PbX2vC1CY3yVDlVdLQPS+0Y2WeSn6uYfIV5yLK0ENslbjRKh9Ml7y6GoodYwjA5Rb+gEsITQKBgGiamEFtuYM2VWoWNTQmdndsgb9N131CqLnrfRLzK2cZ34zz1i9BgxZhAUvLeIaSt068/TI/BqxZ1q2mBt2DCrCBL7gKPB8QSWWMl6Q+ZUEExzVSAcnfK5Dlf1ZcY69gBDd+ahZAA0lu8eZo3aZcUvJ8J7Z28mKKT7A6UtyuqQnVAoGBAIDS7n4scDIeWuUZoBWjVOBHlxQ61H78Ye2/lSshtzyu/tKGfgYKIPsFXUUDQ7llN88Wm9yh3qaM4l3WLOUPQtTWlya0C22UuOSsjxRhKjgPqfP4b1zKlfCo5e8fuvXYNgDrcpme6+7LVwjGg5zTkC0xB1d+NJvt0zV7fvNKLxPk" ],
            "certificate" : [ "MIIClzCCAX8CBgGAH2OQpzANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARkZW1vMB4XDTIyMDQxMjIwMDYwMFoXDTMyMDQxMjIwMDc0MFowDzENMAsGA1UEAwwEZGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJueIVIPFnHOc9Hq0geZaSLKZJgmZZMyphiNef5ZKQoC8UO7fqSWrreX+LWMnvnLfo91YjBCltgNY263+Wtv0Z7WOuHNC5WnLsca0auT0mBnI7vl+Gi3UojhdVgReC/y6iLizldhdwwnA5ad5/4tTgKRKobMz5tUsmZnbJL3sr9Q9NCrSQEWrfxGZvQ/fL6C4dkbl3u/+TuVVS/Hf763YoOuy8suag9AaRVRJ+zdM6CERedabJdRLqhm+0ZE5m1mw914K/4ZhrZeA7Qh4Y/nAw8cksOEkhvqm55nuSSMLLbVHWIiABhuY9tKgKXYotvIwUnDHDNB4fqmSACVFS/Gs/sCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAP7T7zlig5GPNrbi5wM+8cYXf6S9Kig0p4xLjF/M159NZMxzWoRVAEE7CUFM6hUWVXrAVvb4qEradzCopnv1R7/hXDsAd90I1LOXmEdnp2skcozXdgisQRHeIU1UhXBWlzPilaHdXoB91ThoDBCW0hk/R70STylnqsbbNj81YxdeZ+rvGke5U4PMSI5BhqqfMQQIBEp2/E05YB+R7i+tPm+0RCIq0D2wJgDiVU52N/rlMSUtl8FBw6SPROAOYGF2Z10UsrAYGeDkQ55x7joyXe142QJyixOfPU4qNBcihlVeiYRqdrBtSkHi45U2HzAl2eOIJwi+DrCPLNogH0jrB/Q==" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "edb0d356-8e7c-4092-9713-5cee57252411",
          "name" : "hmac-generated",
          "providerId" : "hmac-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "02845871-5f94-40e8-adf6-c694b92b57d9" ],
            "secret" : [ "h9HWL7cDX0QcRlR9ga0ujNL_l6wN1r3jbYxI2Nobz_DzOqqBcsCopR6CBMvb7xuI73MPWfPJHNUewy8M5a_W0A" ],
            "priority" : [ "100" ],
            "algorithm" : [ "HS256" ]
          }
        }, {
          "id" : "1ec3800a-0594-48e2-8ac6-62231d2d7be7",
          "name" : "aes-generated",
          "providerId" : "aes-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "a882b40e-a867-4a40-b41d-a36fa2117fb1" ],
            "secret" : [ "rocSfyv2kvtVnewvBC8O3g" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "4a7ec909-685d-4f83-bbf4-f9c080e8fdb4",
          "name" : "rsa-enc-generated",
          "providerId" : "rsa-enc-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEowIBAAKCAQEAvmJvxo/ZZeYv6+dHoHxwFapIcM/KErhixsPnays1hLK8zSPfdN0tTEOxdRlOknvgnsDAozwHa2ieoHdHqkKzbQ1gEMhnSuLBEnZGy9IaGomDRFaWTUfSlBuc9ty8WuduiebM/thGVamRkBwNBkR4bR8kiuhJ4669feq0xWDIUsRnLcU2N7Y5WPogbgvhTyDu3Gr7ycCTHTHa7dol8a2km7CvGUY+OOxvX+sRCkpIO2Iv1bgXoDcjkxyDCALJBQZ0hBcy19Um7LikeDLB4ngjpWvB9xhYvJ4UcAcb0DygMQaFW+sO9gIhJ7donp2B+qeR5pfGoVdHyFeMybLT90Q2wwIDAQABAoIBAChWtxQ9WnTKxxCW2ohYlW8hu2Obw1cgFl3DGH+OkjJhpLtahHhAfN6R4UHMcOd8s+UvNiHgEDpj2mhpnZentli+4sHrlGc7kGkXAn0hMUK6LEQIjKQnOakECMgNkSM5siQp8Pl2XcC8wwjjyKaxT0rftGByQ2WomqHZXyALF6bhdIxid3Rwn6AyDZrt91RK/u7Q9N78oRvWZdbp6mWdnXWffLbkZlwdO578dcv3o+uvgtZsRdI0XSJYsqmMaRtF0+Y0HFbW13CtUpTTGCTUr6iUs6hDIr9OlPlbzklHpI4+DFszW4tJ2p32Cr6PPeJdrtjbKJg2LRm15t9xcZwI8WECgYEA8KG1/GTt6Xv5OaSQHUJdKGil/PIjC+UMVAQpSbBGIkpYk2FGmmIfqnOkVJFi8oFzZ+2L9msa/QIu92lmqHbT2DB9dXccUp7LA6SH6FxU6w1lwvIp2U4qddv3KFEam3l/7jWyE2fCvbHET+bj+CERYVv0KVHKT4cOubxfEb/H6wkCgYEAyosxVcrRFhH+eL5uC3crnr6x3WaTdeGLTHvkPD23iaHkLXJwJjUy6JxWSBjv5CMZ6T15E45fdCGKrIEqn8TAI66QEcJyb6dT9fX2yZjHgx//3v8zr/JHvKqv6DGhQ/2k/57fOSgDeUrMLxZyxgggb5552Vl0dngFOld4Y8LZqmsCgYEA2KT/L+m+uUPAssESbwVc0hDFwOJP41moq8vDUHC/9Adzj904r65ATDopbWon56XcvWkFZiov9jKNDnt6zZmOSUn+6k7+1PPaW8E6C111pto9EDLuspLJb6tG7ql2hxvwrgrx9L6qehceY8HA5ZkACOO9A6Z7uvYhr9+EyHoeB+ECgYBolIxpvupM2gep8rHBa8vzEIWoSuGS+V1CpanITRmqkBPQP4mWwNtDbg3C9lVPV6x2WQ5eQaIZxYPj5GHM0vtesTCkauFJs31Pv6uoliFWHDyyuNTIYXIXAY8Idi/Nencqoa6ixX1dsHhTS+UBSYrt90b1KhJPZVNVt3prEF3xdwKBgA6JTYn6zCglN1D5XtuSWmYcXn2dPdzzwyWlNNw7CIk8hKymYIap/FKiCgUPdXDXCKzWseIKLdUexnvowoDtHr05DTfrmMUkSbmgSE5Gl6jSYCGBjSGALxVpmp9jR4Tbus8HE4d+W27/+fdKCSmnjGC/ZgeIjTWEVmntE1PUD+wR" ],
            "certificate" : [ "MIIClzCCAX8CBgGAH2ORijANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDARkZW1vMB4XDTIyMDQxMjIwMDYwMFoXDTMyMDQxMjIwMDc0MFowDzENMAsGA1UEAwwEZGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL5ib8aP2WXmL+vnR6B8cBWqSHDPyhK4YsbD52srNYSyvM0j33TdLUxDsXUZTpJ74J7AwKM8B2tonqB3R6pCs20NYBDIZ0riwRJ2RsvSGhqJg0RWlk1H0pQbnPbcvFrnbonmzP7YRlWpkZAcDQZEeG0fJIroSeOuvX3qtMVgyFLEZy3FNje2OVj6IG4L4U8g7txq+8nAkx0x2u3aJfGtpJuwrxlGPjjsb1/rEQpKSDtiL9W4F6A3I5McgwgCyQUGdIQXMtfVJuy4pHgyweJ4I6VrwfcYWLyeFHAHG9A8oDEGhVvrDvYCISe3aJ6dgfqnkeaXxqFXR8hXjMmy0/dENsMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAQRYFHS1I5lYkWOP2ncNoUCW+4Z9MwuqWU3Ww2brX6aCOG+C/HyE4A/fYawK+BLBKCiTlI2Xs8urDAIqLHRDISeGR3Ju7LlF8hSWBlXMl2HOjZV/PIEMqyJEJhDX7vBW7y7BeDWmOhP2zF5dY+RMC1W24cAgMC6p/EQV9foutWzAB38eA2rYeQqdg58Og8iz2sGnFYmwjV6c1kJQPh3dtf0czC986CdYwo/KYZHEHpz4iubVOnGoydlD6XlAO3Vmg9ErdGmSj6X+paRQIHBje2aTzVoNH3ivcbzPwgNFVdpsVoY9YhYAPNypMcHuCuoLSvBT2LBUOzv06IfmxgqxlYg==" ],
            "priority" : [ "100" ],
            "algorithm" : [ "RSA-OAEP" ]
          }
        } ]
      },
      "internationalizationEnabled" : false,
      "supportedLocales" : [ ],
      "authenticationFlows" : [ {
        "id" : "8f681dc3-b2dc-461e-a59e-533477bae6dd",
        "alias" : "Account verification options",
        "description" : "Method with which to verity the existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-email-verification",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Verify Existing Account by Re-authentication",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "e07eb4b5-5c35-4899-af8a-13dea9b6d6f3",
        "alias" : "Authentication Options",
        "description" : "Authentication options.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "basic-auth",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "basic-auth-otp",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "aae5287f-9c43-464b-90f0-904b85c2375c",
        "alias" : "Browser - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "3253fce6-52ec-4824-a238-408f764e4882",
        "alias" : "Direct Grant - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "1a0b6568-cb67-4bd4-915f-29ed1dcc07d4",
        "alias" : "First broker login - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "af7f7d65-100a-4a10-85eb-82e8a591157c",
        "alias" : "Handle Existing Account",
        "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-confirm-link",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Account verification options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "8e13f1b9-c15b-4ae5-926b-fa810ebdeceb",
        "alias" : "Reset - Conditional OTP",
        "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "ec2d368f-b615-4fcd-a57a-058723353305",
        "alias" : "User creation or linking",
        "description" : "Flow for the existing/non-existing user alternatives",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "create unique user config",
          "authenticator" : "idp-create-user-if-unique",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Handle Existing Account",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "fac592fc-6e27-48f0-bf38-f74981ae9a18",
        "alias" : "Verify Existing Account by Re-authentication",
        "description" : "Reauthentication of existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "First broker login - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "67d46ea7-dc42-416d-9a05-38af33706719",
        "alias" : "browser",
        "description" : "browser based authentication",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-cookie",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "identity-provider-redirector",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 25,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "forms",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "9acbfe8c-76ce-4492-94cd-0000711e1921",
        "alias" : "clients",
        "description" : "Base authentication for clients",
        "providerId" : "client-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "client-secret",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-secret-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-x509",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "c9bada5e-db50-4691-8111-dad516127023",
        "alias" : "direct grant",
        "description" : "OpenID Connect Resource Owner Grant",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "direct-grant-validate-username",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "Direct Grant - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "fb6fd39d-7841-4cad-99be-f3e985c8370b",
        "alias" : "docker auth",
        "description" : "Used by Docker clients to authenticate against the IDP",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "docker-http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "c427810e-89e5-4d23-84bd-d70da7fc7ede",
        "alias" : "first broker login",
        "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "review profile config",
          "authenticator" : "idp-review-profile",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "User creation or linking",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "776ea85e-fc25-4eb2-bacc-121cd2fce5f6",
        "alias" : "forms",
        "description" : "Username, password, otp and other auth forms.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "f9a45d11-d329-4b62-9e08-1327ec364373",
        "alias" : "http challenge",
        "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "no-cookie-redirect",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Authentication Options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "c3ef9849-f1a6-4ed5-9190-f81288e664d0",
        "alias" : "registration",
        "description" : "registration flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-page-form",
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "registration form",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "d8b5fc9d-4f56-44d6-a83a-3c7d50bafb9d",
        "alias" : "registration form",
        "description" : "registration form",
        "providerId" : "form-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-user-creation",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-profile-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-password-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 50,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-recaptcha-action",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 60,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "3fc53e2b-e145-4acb-9704-9bcb8531077a",
        "alias" : "reset credentials",
        "description" : "Reset credentials for a user if they forgot their password or something",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "reset-credentials-choose-user",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-credential-email",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 40,
          "autheticatorFlow" : true,
          "flowAlias" : "Reset - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "4a72cf3d-dc64-43cd-b725-38b6ab0fca28",
        "alias" : "saml ecp",
        "description" : "SAML ECP Profile Authentication Flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      } ],
      "authenticatorConfig" : [ {
        "id" : "6928f7e6-9b15-44f9-95d1-0b01670d5c9b",
        "alias" : "create unique user config",
        "config" : {
          "require.password.update.after.registration" : "false"
        }
      }, {
        "id" : "c8f86ff2-eb90-4d28-a3a0-22ec313fa2a9",
        "alias" : "review profile config",
        "config" : {
          "update.profile.on.first.login" : "missing"
        }
      } ],
      "requiredActions" : [ {
        "alias" : "CONFIGURE_TOTP",
        "name" : "Configure OTP",
        "providerId" : "CONFIGURE_TOTP",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 10,
        "config" : { }
      }, {
        "alias" : "terms_and_conditions",
        "name" : "Terms and Conditions",
        "providerId" : "terms_and_conditions",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 20,
        "config" : { }
      }, {
        "alias" : "UPDATE_PASSWORD",
        "name" : "Update Password",
        "providerId" : "UPDATE_PASSWORD",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 30,
        "config" : { }
      }, {
        "alias" : "UPDATE_PROFILE",
        "name" : "Update Profile",
        "providerId" : "UPDATE_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 40,
        "config" : { }
      }, {
        "alias" : "VERIFY_EMAIL",
        "name" : "Verify Email",
        "providerId" : "VERIFY_EMAIL",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 50,
        "config" : { }
      }, {
        "alias" : "delete_account",
        "name" : "Delete Account",
        "providerId" : "delete_account",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 60,
        "config" : { }
      }, {
        "alias" : "update_user_locale",
        "name" : "Update User Locale",
        "providerId" : "update_user_locale",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 1000,
        "config" : { }
      } ],
      "browserFlow" : "browser",
      "registrationFlow" : "registration",
      "directGrantFlow" : "direct grant",
      "resetCredentialsFlow" : "reset credentials",
      "clientAuthenticationFlow" : "clients",
      "dockerAuthenticationFlow" : "docker auth",
      "attributes" : {
        "cibaBackchannelTokenDeliveryMode" : "poll",
        "cibaExpiresIn" : "120",
        "cibaAuthRequestedUserHint" : "login_hint",
        "oauth2DeviceCodeLifespan" : "600",
        "clientOfflineSessionMaxLifespan" : "0",
        "oauth2DevicePollingInterval" : "5",
        "clientSessionIdleTimeout" : "0",
        "parRequestUriLifespan" : "60",
        "clientSessionMaxLifespan" : "0",
        "clientOfflineSessionIdleTimeout" : "0",
        "cibaInterval" : "5"
      },
      "keycloakVersion" : "17.0.1",
      "userManagedAccessAllowed" : false,
      "clientProfiles" : {
        "profiles" : [ ]
      },
      "clientPolicies" : {
        "policies" : [ ]
      }
    }
kind: ConfigMap
metadata:
  name: kc-master-realm


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  namespace: oauth2-demo
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
  serviceName: keycloak-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/name: keycloak
    spec:
      volumes:
        - configMap:
            defaultMode: 365
            items:
              - key: keycloak.cli
                path: keycloak.cli
            name: keycloak-startup
          name: startup
        - configMap:
            defaultMode: 365
            items:
              - key: realm.json
                path: realm.json
            name: kc-master-realm
          name: master-realm
      containers:
        - name: keycloak
          imagePullPolicy: IfNotPresent
          env:
          - name: KEYCLOAK_USER
            value: admin
          - name: KEYCLOAK_PASSWORD
            value: admin
          - name: KEYCLOAK_IMPORT
            value: /realm/realm.json
          volumeMounts:
            - mountPath: /opt/jboss/startup-scripts/keycloak.cli
              name: startup
              readOnly: true
              subPath: keycloak.cli
            - name: master-realm
              mountPath: "/realm/"
              readOnly: true