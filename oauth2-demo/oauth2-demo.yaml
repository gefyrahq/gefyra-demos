apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-oauth2proxy
data:
  OAUTH2_PROXY_CLIENT_ID: "oauth2-demo"
  OAUTH2_PROXY_CLIENT_SECRET: "rzap7hjeepSxiXsmEXqQNaY9uwvPqOb1"
  OAUTH2_PROXY_COOKIE_SECRET: "d3c1VGxTZmtwQzBURUFMZklVMXZUakZ2"
  OAUTH2_PROXY_PROVIDER: "oidc"
  OAUTH2_PROXY_EMAIL_DOMAINS: "*"
  OAUTH2_PROXY_SCOPE: "openid"
  OAUTH2_PROXY_UPSTREAMS: "http://127.0.0.1:8155"
  OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:8809"
  OAUTH2_PROXY_PROXY_PREFIX: "/oauth2"
  OAUTH2_PROXY_LOGIN_URL: "http://keycloak.127.0.0.1.nip.io:8080/auth/realms/demo/protocol/openid-connect/auth"
  OAUTH2_PROXY_REDEEM_URL: "http://keycloak-http/auth/realms/demo/protocol/openid-connect/token"
  OAUTH2_PROXY_VALIDATE_URL: "http://keycloak-http/auth/realms/demo/protocol/openid-connect/userinfo"
  OAUTH2_PROXY_REDIRECT_URL: "http://oauth2-demo.127.0.0.1.nip.io:8080/oauth2/callback"
  OAUTH2_PROXY_SKIP_AUTH_PREFLIGHT: "true"
  OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS: "true"
  OAUTH2_PROXY_SKIP_AUTH_ROUTES: "GET: /schema.json"
  OAUTH2_PROXY_COOKIE_HTTPONLY: "true"
  OAUTH2_PROXY_COOKIE_SECURE: "false"
  OAUTH2_PROXY_COOKIE_SAMESITE: "lax"
  OAUTH2_PROXY_COOKIE_DOMAINS: "*"
  OAUTH2_PROXY_COOKIE_REFRESH: "1m"
  OAUTH2_PROXY_STANDARD_LOGGING: "true"
  OAUTH2_PROXY_AUTH_LOGGING: "true"
  OAUTH2_PROXY_REQUEST_LOGGING: "true"
  OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
  OAUTH2_PROXY_OIDC_ISSUER_URL: "http://keycloak.127.0.0.1.nip.io:8080/auth/realms/demo"
  OAUTH2_PROXY_OIDC_JWKS_URL: "http://keycloak-http/auth/realms/demo/protocol/openid-connect/certs"
  OAUTH2_PROXY_SKIP_OIDC_DISCOVERY: "true"
  OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-demo
  labels:
    app.kubernetes.io/name: oauth2-demo
    app.kubernetes.io/instance: gefyra-demos
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: oauth2-demo
      app.kubernetes.io/instance: gefyra-demos
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: oauth2-demo
        app.kubernetes.io/instance: gefyra-demos
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: oauth2-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.2.1
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /ping
              port: 8809
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /ping
              port: 8809
            initialDelaySeconds: 5
            periodSeconds: 5
          ports:
            - containerPort: 8809
              protocol: TCP
              name: http
          envFrom:
            - configMapRef:
                name: oauth2-oauth2proxy
        - name: oauth2-demo-app
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          image: "quay.io/gefyra/oauth2-demo:latest"
          imagePullPolicy: Always
          ports:
            - name: http-intern
              containerPort: 8155
              protocol: TCP
          resources: {}

---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-demo
  labels:
    app.kubernetes.io/name: oauth2-demo
    app.kubernetes.io/instance: gefyra-demos
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: oauth2-demo
    app.kubernetes.io/instance: gefyra-demos

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-demo
spec:
  rules:
    - host: oauth2-demo.127.0.0.1.nip.io
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: oauth2-demo
              port:
                number: 8080
